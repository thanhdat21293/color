'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var metaWarning = 'Deprecation Warning: Please update your meta object. Check github project for more information. \nhttps://github.com/danmademe/express-vue';
//Checks Vue Object to check if a meta object is inside head
//Returns Boolean
function checkMetaInsideHead(vueObject) {
    var isMetaInsideHead = false;
    if (vueObject.meta && vueObject.meta.head) {
        isMetaInsideHead = false;
    } else if (vueObject.head && vueObject.head.meta) {
        isMetaInsideHead = true;
    }
    return isMetaInsideHead;
}

//Support for legacy v3.7.2 and lower
// vue: {
//     meta: {
//         title: 'Page Title',
//         head: [
//             { property:'og:title', content: 'Page Title'},
//             { name:'twitter:title', content: 'Page Title'},
//         ]
//     }
// }
function legacyMetaTags(metaTags, vueObject) {
    console.warn(metaWarning);
    if (vueObject.meta && vueObject.meta.head) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
            for (var _iterator = vueObject.meta.head[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var metaItem = _step.value;

                if (metaItem.name) {
                    metaTags += '<meta name="' + metaItem.name + '" content="' + metaItem.content + '" />';
                } else if (metaItem.property) {
                    metaTags += '<meta property="' + metaItem.property + '" content="' + metaItem.content + '" />';
                } else if (metaItem.script) {
                    var charset = metaItem.charset || 'utf-8';
                    metaTags += '<script src="' + metaItem.script + '" charset="' + charset + '"></script>';
                } else if (metaItem.style) {
                    var type = metaItem.type || 'text/css';
                    var rel = metaItem.rel || 'stylesheet';
                    metaTags += '<link rel="' + rel + '" type="' + type + '" href="' + metaItem.style + '">';
                }
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                    _iterator.return();
                }
            } finally {
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
    }
    return metaTags;
}

//For v3.7.3 and greater
// vue: {
//     head: {
//         title: 'Page Title',
//         meta: [
//             { property:'og:title', content: 'Page Title'},
//             { name:'twitter:title', content: 'Page Title'},
//         ]
//     }
// }
function createMetaTags(metaTags, vueObject) {
    if (vueObject.head && vueObject.head.meta) {
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
            for (var _iterator2 = vueObject.head.meta[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var metaItem = _step2.value;

                if (metaItem.name) {
                    metaTags += '<meta name="' + metaItem.name + '" content="' + metaItem.content + '" />';
                } else if (metaItem.property) {
                    metaTags += '<meta property="' + metaItem.property + '" content="' + metaItem.content + '" />';
                } else if (metaItem.script) {
                    var charset = metaItem.charset || 'utf-8';
                    metaTags += '<script src="' + metaItem.script + '" charset="' + charset + '"></script>';
                } else if (metaItem.style) {
                    var type = metaItem.type || 'text/css';
                    var rel = metaItem.rel || 'stylesheet';
                    metaTags += '<link rel="' + rel + '" type="' + type + '" href="' + metaItem.style + '">';
                }
            }
        } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                    _iterator2.return();
                }
            } finally {
                if (_didIteratorError2) {
                    throw _iteratorError2;
                }
            }
        }
    }
    return metaTags;
}

function headUtil(vueObject) {
    var metaTags = '';
    var title = '';
    var structuredData = '';
    if (vueObject) {
        var hasNewHeadBlock = checkMetaInsideHead(vueObject);

        if (vueObject.head && hasNewHeadBlock) {
            metaTags = createMetaTags(metaTags, vueObject);
        } else if (vueObject.meta && !hasNewHeadBlock) {
            metaTags = legacyMetaTags(metaTags, vueObject);
        }

        if (vueObject.meta && vueObject.meta.title) {
            console.warn(metaWarning);
            title = '<title>' + vueObject.meta.title + '</title>';
        } else if (vueObject.head && vueObject.head.title) {
            title = '<title>' + vueObject.head.title + '</title>';
        }

        if (vueObject.head && vueObject.head.structuredData) {
            structuredData = '<script type="application/ld+json">' + JSON.stringify(vueObject.head.structuredData) + '</script>';
        }
    }

    return title + metaTags + structuredData + '</head>';
}

exports.default = headUtil;
module.exports = exports['default'];